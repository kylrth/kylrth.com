<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Self-Hosted on Kyle Roth</title><link>https://kylrth.com/tags/self-hosted/</link><description>Recent content in Self-Hosted on Kyle Roth</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 15 Jul 2024 11:29:48 -0400</lastBuildDate><atom:link href="https://kylrth.com/tags/self-hosted/index.xml" rel="self" type="application/rss+xml"/><item><title>avatarify</title><link>https://kylrth.com/post/avatarify/</link><pubDate>Wed, 24 Nov 2021 11:58:34 -0500</pubDate><guid>https://kylrth.com/post/avatarify/</guid><description>Avatarify is a cool project that lets you create a relatively realistic avatar that you can use during video meetings. It works by creating a fake video input device and passing your video input through a neural network in PyTorch. My laptop doesn&amp;rsquo;t have a GPU, so I used the server/client setup.
setting up the server permalink Be sure you&amp;rsquo;ve installed the Nvidia Docker runtime so that the Docker container can use the GPU.</description></item><item><title>hosting my own web services</title><link>https://kylrth.com/post/self-hosting/</link><pubDate>Tue, 23 Nov 2021 07:57:00 -0500</pubDate><guid>https://kylrth.com/post/self-hosting/</guid><description>I host several services on an Alienware gaming computer I keep at my apartment. (We call it the spaceship.) I originally got the computer so I could have a computer with a GPU for machine learning projects, but I&amp;rsquo;ve since started using this computer to host a bunch of different services. Here I&amp;rsquo;ve documented how I set up the server.
operating system permalink To keep things simple I use Ubuntu 20.</description></item><item><title>Jupyter Lab Hub in Docker with Nvidia GPU support</title><link>https://kylrth.com/post/jupyter-lab/</link><pubDate>Tue, 19 Oct 2021 20:28:25 -0400</pubDate><guid>https://kylrth.com/post/jupyter-lab/</guid><description>This is how I set up my headless home server with a Jupyter Lab Docker container with an Nvidia GPU runtime. Login is handled by a GitHub OAuth application.
Nvidia drivers and the container runtime permalink First, check here (replacing the CUDA version in the URL with your own) to see which Nvidia drivers you need for the CUDA toolkit version you want. I&amp;rsquo;m using CUDA 11.4.2, which means I need at least driver version 470.</description></item><item><title>Minecraft in Docker</title><link>https://kylrth.com/post/minecraft/</link><pubDate>Mon, 02 Aug 2021 13:25:28 -0600</pubDate><guid>https://kylrth.com/post/minecraft/</guid><description>This guide shows how to host multiple Minecraft servers on a single machine with docker-compose.
mkdir minecraft_server cd minecraft_server mkdir data/ wget /post/minecraft/docker-compose.yml \ -O docker-compose.yml This docker-compose setup uses itzg&amp;rsquo;s Docker image, which you see further documentation for here.
If you&amp;rsquo;re moving from a vanilla Minecraft world, do the following to get the different world directories in the right position:
cp -r ${OLD}/world data/server/world mkdir data/server/world_{nether,the_end} mv data/server/world/DIM-1 data/server/world_nether/DIM-1 mv data/server/world/DIM1 data/server/world_the_end/DIM1 Here&amp;rsquo;s the map from vanilla Minecraft directories to Spigot directories (which is what itzg&amp;rsquo;s container uses):</description></item><item><title>Matrix setup with Synapse, Postgres, Maubot, and matrix-registration</title><link>https://kylrth.com/post/matrix-setup/</link><pubDate>Mon, 02 Aug 2021 10:30:00 -0600</pubDate><guid>https://kylrth.com/post/matrix-setup/</guid><description>This is how I set up my own Matrix server with Docker.These instructions were originally for ARM, back when I ran this server on a Raspberry Pi. Unfortunately, the Matrix community stopped releasing ARM images, so the latest version that will work on ARM without QEMU is v1.26.0, which is very old now. These instructions have been updated to use amd64 images, but I&amp;rsquo;ll preserve the references to ARM images as comments.</description></item><item><title>I really just want to edit and compile my LaTeX files in VS Code</title><link>https://kylrth.com/post/latex-vscode/</link><pubDate>Mon, 12 Jul 2021 21:43:47 -0600</pubDate><guid>https://kylrth.com/post/latex-vscode/</guid><description>LaTeX has a ton of different flavors, releases, and installations: MacTeX, MiKTeX, TeXworks, XeTeX, pdfTeX, LuaTeX&amp;hellip; If you&amp;rsquo;re using Linux and just want to edit LaTeX files in Visual Studio Code and have them automatically rendered as PDFs, follow these instructions:
On Arch-based distros, install the packages listed here. On Debian-based systems, sudo apt install texlive.
Install some Perl dependencies:
sudo cpan Log::Log4perl Log::LogDispatch Log::Dispatch::File YAML::Tiny File::HomeDir If you want to use FontAwesome on Arch-based systems, install the oft-font-awesome package and then do the following (source):</description></item><item><title>using Matrix</title><link>https://kylrth.com/post/matrix-registration/</link><pubDate>Sun, 02 Feb 2020 12:34:56 -0700</pubDate><guid>https://kylrth.com/post/matrix-registration/</guid><description>Matrix is a federated, open source chat system. Federation means that people can message each other across different servers, like in the image below. In that way, it works sort of like email: even though you may use you@gmail.com and I might use me@kylrth.com, we can still write each other emails.
In our case, I host the server at matrix.kylrth.com, and you and I can connect to it with various clients.</description></item></channel></rss>